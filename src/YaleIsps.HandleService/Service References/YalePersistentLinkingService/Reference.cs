//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YaleIsps.HandleService.YalePersistentLinkingService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.ypls.odai.yale.edu/", ConfigurationName="YalePersistentLinkingService.IPersistentLinking")]
    public interface IPersistentLinking {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="results")]
        YaleIsps.HandleService.YalePersistentLinkingService.resultMap createBatchSemantic(YaleIsps.HandleService.YalePersistentLinkingService.handleMap handlesToValues, string group, string user, string credential);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="results")]
        System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.resultMap> createBatchSemanticAsync(YaleIsps.HandleService.YalePersistentLinkingService.handleMap handlesToValues, string group, string user, string credential);
        
        // CODEGEN: Parameter 'values' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="results")]
        YaleIsps.HandleService.YalePersistentLinkingService.deleteBatchResponse deleteBatch(YaleIsps.HandleService.YalePersistentLinkingService.deleteBatch request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.deleteBatchResponse> deleteBatchAsync(YaleIsps.HandleService.YalePersistentLinkingService.deleteBatch request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="results")]
        YaleIsps.HandleService.YalePersistentLinkingService.resultMap modifyBatch(YaleIsps.HandleService.YalePersistentLinkingService.handleMap handlesToValues, string user, string credential);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="results")]
        System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.resultMap> modifyBatchAsync(YaleIsps.HandleService.YalePersistentLinkingService.handleMap handlesToValues, string user, string credential);
        
        // CODEGEN: Parameter 'values' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="results")]
        YaleIsps.HandleService.YalePersistentLinkingService.resolveBatchResponse resolveBatch(YaleIsps.HandleService.YalePersistentLinkingService.resolveBatch request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.resolveBatchResponse> resolveBatchAsync(YaleIsps.HandleService.YalePersistentLinkingService.resolveBatch request);
        
        // CODEGEN: Parameter 'values' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="results")]
        YaleIsps.HandleService.YalePersistentLinkingService.createBatchResponse createBatch(YaleIsps.HandleService.YalePersistentLinkingService.createBatch request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.createBatchResponse> createBatchAsync(YaleIsps.HandleService.YalePersistentLinkingService.createBatch request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.ypls.odai.yale.edu/")]
    public partial class handleMap : object, System.ComponentModel.INotifyPropertyChanged {
        
        private handleMapEntry[] mapField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("entry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public handleMapEntry[] map {
            get {
                return this.mapField;
            }
            set {
                this.mapField = value;
                this.RaisePropertyChanged("map");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.ypls.odai.yale.edu/")]
    public partial class handleMapEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.ypls.odai.yale.edu/")]
    public partial class resultMap : object, System.ComponentModel.INotifyPropertyChanged {
        
        private resultMapEntry[] failMapField;
        
        private resultMapEntry1[] successMapField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("entry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public resultMapEntry[] failMap {
            get {
                return this.failMapField;
            }
            set {
                this.failMapField = value;
                this.RaisePropertyChanged("failMap");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("entry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public resultMapEntry1[] successMap {
            get {
                return this.successMapField;
            }
            set {
                this.successMapField = value;
                this.RaisePropertyChanged("successMap");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.ypls.odai.yale.edu/")]
    public partial class resultMapEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.ypls.odai.yale.edu/")]
    public partial class resultMapEntry1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteBatch", WrapperNamespace="http://ws.ypls.odai.yale.edu/", IsWrapped=true)]
    public partial class deleteBatch {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute()]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] values;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string credential;
        
        public deleteBatch() {
        }
        
        public deleteBatch(string[] values, string user, string credential) {
            this.values = values;
            this.user = user;
            this.credential = credential;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteBatchResponse", WrapperNamespace="http://ws.ypls.odai.yale.edu/", IsWrapped=true)]
    public partial class deleteBatchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public YaleIsps.HandleService.YalePersistentLinkingService.resultMap results;
        
        public deleteBatchResponse() {
        }
        
        public deleteBatchResponse(YaleIsps.HandleService.YalePersistentLinkingService.resultMap results) {
            this.results = results;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="resolveBatch", WrapperNamespace="http://ws.ypls.odai.yale.edu/", IsWrapped=true)]
    public partial class resolveBatch {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute()]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] values;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string credential;
        
        public resolveBatch() {
        }
        
        public resolveBatch(string[] values, string user, string credential) {
            this.values = values;
            this.user = user;
            this.credential = credential;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="resolveBatchResponse", WrapperNamespace="http://ws.ypls.odai.yale.edu/", IsWrapped=true)]
    public partial class resolveBatchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public YaleIsps.HandleService.YalePersistentLinkingService.resultMap results;
        
        public resolveBatchResponse() {
        }
        
        public resolveBatchResponse(YaleIsps.HandleService.YalePersistentLinkingService.resultMap results) {
            this.results = results;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createBatch", WrapperNamespace="http://ws.ypls.odai.yale.edu/", IsWrapped=true)]
    public partial class createBatch {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute()]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] values;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string group;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string credential;
        
        public createBatch() {
        }
        
        public createBatch(string[] values, string group, string user, string credential) {
            this.values = values;
            this.group = group;
            this.user = user;
            this.credential = credential;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createBatchResponse", WrapperNamespace="http://ws.ypls.odai.yale.edu/", IsWrapped=true)]
    public partial class createBatchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public YaleIsps.HandleService.YalePersistentLinkingService.resultMap results;
        
        public createBatchResponse() {
        }
        
        public createBatchResponse(YaleIsps.HandleService.YalePersistentLinkingService.resultMap results) {
            this.results = results;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersistentLinkingChannel : YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersistentLinkingClient : System.ServiceModel.ClientBase<YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking>, YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking {
        
        public PersistentLinkingClient() {
        }
        
        public PersistentLinkingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersistentLinkingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersistentLinkingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersistentLinkingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public YaleIsps.HandleService.YalePersistentLinkingService.resultMap createBatchSemantic(YaleIsps.HandleService.YalePersistentLinkingService.handleMap handlesToValues, string group, string user, string credential) {
            return base.Channel.createBatchSemantic(handlesToValues, group, user, credential);
        }
        
        public System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.resultMap> createBatchSemanticAsync(YaleIsps.HandleService.YalePersistentLinkingService.handleMap handlesToValues, string group, string user, string credential) {
            return base.Channel.createBatchSemanticAsync(handlesToValues, group, user, credential);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        YaleIsps.HandleService.YalePersistentLinkingService.deleteBatchResponse YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking.deleteBatch(YaleIsps.HandleService.YalePersistentLinkingService.deleteBatch request) {
            return base.Channel.deleteBatch(request);
        }
        
        public YaleIsps.HandleService.YalePersistentLinkingService.resultMap deleteBatch(string[] values, string user, string credential) {
            YaleIsps.HandleService.YalePersistentLinkingService.deleteBatch inValue = new YaleIsps.HandleService.YalePersistentLinkingService.deleteBatch();
            inValue.values = values;
            inValue.user = user;
            inValue.credential = credential;
            YaleIsps.HandleService.YalePersistentLinkingService.deleteBatchResponse retVal = ((YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking)(this)).deleteBatch(inValue);
            return retVal.results;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.deleteBatchResponse> YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking.deleteBatchAsync(YaleIsps.HandleService.YalePersistentLinkingService.deleteBatch request) {
            return base.Channel.deleteBatchAsync(request);
        }
        
        public System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.deleteBatchResponse> deleteBatchAsync(string[] values, string user, string credential) {
            YaleIsps.HandleService.YalePersistentLinkingService.deleteBatch inValue = new YaleIsps.HandleService.YalePersistentLinkingService.deleteBatch();
            inValue.values = values;
            inValue.user = user;
            inValue.credential = credential;
            return ((YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking)(this)).deleteBatchAsync(inValue);
        }
        
        public YaleIsps.HandleService.YalePersistentLinkingService.resultMap modifyBatch(YaleIsps.HandleService.YalePersistentLinkingService.handleMap handlesToValues, string user, string credential) {
            return base.Channel.modifyBatch(handlesToValues, user, credential);
        }
        
        public System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.resultMap> modifyBatchAsync(YaleIsps.HandleService.YalePersistentLinkingService.handleMap handlesToValues, string user, string credential) {
            return base.Channel.modifyBatchAsync(handlesToValues, user, credential);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        YaleIsps.HandleService.YalePersistentLinkingService.resolveBatchResponse YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking.resolveBatch(YaleIsps.HandleService.YalePersistentLinkingService.resolveBatch request) {
            return base.Channel.resolveBatch(request);
        }
        
        public YaleIsps.HandleService.YalePersistentLinkingService.resultMap resolveBatch(string[] values, string user, string credential) {
            YaleIsps.HandleService.YalePersistentLinkingService.resolveBatch inValue = new YaleIsps.HandleService.YalePersistentLinkingService.resolveBatch();
            inValue.values = values;
            inValue.user = user;
            inValue.credential = credential;
            YaleIsps.HandleService.YalePersistentLinkingService.resolveBatchResponse retVal = ((YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking)(this)).resolveBatch(inValue);
            return retVal.results;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.resolveBatchResponse> YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking.resolveBatchAsync(YaleIsps.HandleService.YalePersistentLinkingService.resolveBatch request) {
            return base.Channel.resolveBatchAsync(request);
        }
        
        public System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.resolveBatchResponse> resolveBatchAsync(string[] values, string user, string credential) {
            YaleIsps.HandleService.YalePersistentLinkingService.resolveBatch inValue = new YaleIsps.HandleService.YalePersistentLinkingService.resolveBatch();
            inValue.values = values;
            inValue.user = user;
            inValue.credential = credential;
            return ((YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking)(this)).resolveBatchAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        YaleIsps.HandleService.YalePersistentLinkingService.createBatchResponse YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking.createBatch(YaleIsps.HandleService.YalePersistentLinkingService.createBatch request) {
            return base.Channel.createBatch(request);
        }
        
        public YaleIsps.HandleService.YalePersistentLinkingService.resultMap createBatch(string[] values, string group, string user, string credential) {
            YaleIsps.HandleService.YalePersistentLinkingService.createBatch inValue = new YaleIsps.HandleService.YalePersistentLinkingService.createBatch();
            inValue.values = values;
            inValue.group = group;
            inValue.user = user;
            inValue.credential = credential;
            YaleIsps.HandleService.YalePersistentLinkingService.createBatchResponse retVal = ((YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking)(this)).createBatch(inValue);
            return retVal.results;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.createBatchResponse> YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking.createBatchAsync(YaleIsps.HandleService.YalePersistentLinkingService.createBatch request) {
            return base.Channel.createBatchAsync(request);
        }
        
        public System.Threading.Tasks.Task<YaleIsps.HandleService.YalePersistentLinkingService.createBatchResponse> createBatchAsync(string[] values, string group, string user, string credential) {
            YaleIsps.HandleService.YalePersistentLinkingService.createBatch inValue = new YaleIsps.HandleService.YalePersistentLinkingService.createBatch();
            inValue.values = values;
            inValue.group = group;
            inValue.user = user;
            inValue.credential = credential;
            return ((YaleIsps.HandleService.YalePersistentLinkingService.IPersistentLinking)(this)).createBatchAsync(inValue);
        }
    }
}
